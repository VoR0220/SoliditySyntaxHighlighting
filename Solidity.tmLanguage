<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>sol</string>
	</array>
	<key>name</key>
	<string>Solidity</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>comment</key>
			<string>Nat Spec</string>
			<key>match</key>
			<string>(\/\/\/ \@.*)</string>
			<key>name</key>
			<string>sublimelinter.outline.warning, comment.block</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Single Line Comments</string>
			<key>match</key>
			<string>\/\/.*</string>
			<key>name</key>
			<string>comment.line</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\/\*)</string>
			<key>comment</key>
			<string>Block Comments</string>
			<key>end</key>
			<string>(\*\/)</string>
			<key>name</key>
			<string>comment.line</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Hexadecimal</string>
			<key>match</key>
			<string>\b(0[xX][a-fA-F0-9]+)\b</string>
			<key>name</key>
			<string>constant.numeric</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Time References/Value References/True &amp; False</string>
			<key>match</key>
			<string>\b(now|seconds|minutes|hours|days|weeks|years|wei|finney|szabo|ether|true|false)\b</string>
			<key>name</key>
			<string>constant.language</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.constant</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>handling Msg, Tx, This, New and Block</string>
			<key>match</key>
			<string>\b(block|msg|tx|this|new)+(\.?\w*)\b</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>push, length, send, balance, call</string>
			<key>match</key>
			<string>\b(push|length|send|balance|call|value|gas)</string>
			<key>name</key>
			<string>storage.clojure</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Strings</string>
			<key>match</key>
			<string>([\"\'].*[\"\'])</string>
			<key>name</key>
			<string>string.quoted</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Operators</string>
			<key>match</key>
			<string>(=|!|&gt;|&lt;|\||&amp;|\^|\*|%|\~|\-|\+|\/|\?)</string>
			<key>name</key>
			<string>keyword.operator</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Control Flow</string>
			<key>match</key>
			<string>\b(while|for|if|else|break|continue|returns?|throw|using|let|selfdestruct|delete)</string>
			<key>name</key>
			<string>keyword.control</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.class</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Library/Contract initilization</string>
			<key>match</key>
			<string>(library|contract)\s+([A-Za-z_]\w*)(\s+is)?(\s[^{]*)?</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Import and alias statements</string>
			<key>match</key>
			<string>\b(import|as|from)\b</string>
			<key>name</key>
			<string>keyword.control.import.python</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Declare functions/modifiers/</string>
			<key>match</key>
			<string>\b(struct|function|modifier|event|enum)\s+([A-Za-z_]\w*)\b</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>storage.type</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Mapping definition</string>
			<key>match</key>
			<string>\b(mapping)\s*\((.*)\s+(=&gt;)\s+(.*)\)(\s+(?:private|public|external|inherited))?\s+([A-Za-z_]\w*)\b</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Variable/Array definitions</string>
			<key>match</key>
			<string>\b(address|var|string\d*|bytes\d*|int\d*|uint\d*|bool)((?:\[\])+)?</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Accessibility</string>
			<key>match</key>
			<string>(\s(?:indexed|public|private|external|internal|anonymous))</string>
			<key>name</key>
			<string>storage.type</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Constant, Storage and Memory</string>
			<key>match</key>
			<string>(\s(?:memory|storage|constant|const)\b)</string>
			<key>name</key>
			<string>support.constant</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Mathematical and Cryptographic Functions</string>
			<key>match</key>
			<string>\b(addmod|mulmod|sha3|sha256|ripemd160|ecrecover)</string>
			<key>name</key>
			<string>keyword.mathematics.matlab</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.sol</string>
	<key>uuid</key>
	<string>9fd19e66-b616-4ce1-b0e8-f9bf099367f2</string>
</dict>
</plist>
